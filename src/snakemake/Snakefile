
###########################################################################################################
#                                             FUNCTIONS
###########################################################################################################

def boolean_to_java_str(bool):
	if bool:
		return 'true'
	else:
		return 'false'


###########################################################################################################
#                                             VARIABLES
###########################################################################################################

# Config
configfile: 'config.json'
MIRNA_FASTA = config["mirna"]
MIRNA_TO_GROUP = config["mirna_gp"]
OUTPUT_DIR = config["outdir"]
FASTQ = config["fastq"]
JAR_DIR = config["jar"]
KMER_SIZE = config["k"]
COUNT_PLUS_STRAND_MAPPINGS_ONLY = config["plus_strand_only"]

if OUTPUT_DIR == '???':
	raise ValueError('Set output directory on command line with \"snakemake --config outdir=...\"')

if FASTQ == '???':
	raise ValueError('Set input fastq file on command line with \"snakemake --config fastq=...\"')

if MIRNA_FASTA == '???':
	raise ValueError('Set miRNA fasta file on command line with \"snakemake --config mirna=...\"')

if MIRNA_TO_GROUP == '???':
	raise ValueError('Set miRNA group table on command line with \"snakemake --config mirna_gp=...\"')

if JAR_DIR == '???':
	raise ValueError('Set jar directory on command line with \"snakemake --config jar=...\"')

if KMER_SIZE == '???':
	raise ValueError('Set kmer size on command line with \"snakemake --config k=...\"')

if COUNT_PLUS_STRAND_MAPPINGS_ONLY == '???':
	raise ValueError('Set count plus strand mappings only (True or False) on command line with \"snakemake --config plus_strand_only=...\"')

# Programs
KMER_SEARCH = JAR_DIR + '/PerfectKmerSearch.jar'
COMBINE_COUNTS = JAR_DIR + '/CombineCountsByGroup.jar'

# Output files
UNSORTED_BAM = OUTPUT_DIR + '/kmer.bam'
COORD_SORTED_BAM = OUTPUT_DIR + '/kmer.sorted.bam'
COORD_SORTED_BAI = OUTPUT_DIR + '/kmer.sorted.bai'
FINAL_COUNTS = OUTPUT_DIR + '/final_counts.txt'

# Misc variables
PLUS_STRAND_ONLY_JAVA = boolean_to_java_str(COUNT_PLUS_STRAND_MAPPINGS_ONLY)


###########################################################################################################
#                                              RULES
###########################################################################################################

rule all:
	input:
		FINAL_COUNTS


rule kmer_match_to_reference:
	input:
        	MIRNA_FASTA
	output:
        	UNSORTED_BAM
	shell:
		'java -jar {KMER_SEARCH} -b {output} -fa {input} -fq {FASTQ} -k {KMER_SIZE}'


rule sort_bam:
	input:
		UNSORTED_BAM
	output:
		COORD_SORTED_BAM
	shell:
		'samtools sort -o {output} -T {output}.tmp {input}'
		

rule index_bam:
	input:
		COORD_SORTED_BAM
	output:
		COORD_SORTED_BAI
	shell:
		'samtools index {input} {output}'
		

rule collapse_counts_by_families:
	input:
		COORD_SORTED_BAM,
		COORD_SORTED_BAI,		
		MIRNA_TO_GROUP
	output:
		FINAL_COUNTS
	shell:
		'java -jar {COMBINE_COUNTS} -b {COORD_SORTED_BAM} -f {MIRNA_FASTA} -g {MIRNA_TO_GROUP} -p {PLUS_STRAND_ONLY_JAVA} -o {output}'



